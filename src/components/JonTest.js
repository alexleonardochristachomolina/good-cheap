/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'
import { apply as applySpring, useSpring, animated as a, interpolate } from 'react-spring/three'

export default function JonTest(props) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, 'models/gfc-thing.glb', loader => {
    const dracoLoader = new DRACOLoader()
    dracoLoader.setDecoderPath('/draco-gltf/')
    loader.setDRACOLoader(dracoLoader)
  })

  const {roty} = useSpring({
    roty: props.rot
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <a.mesh
        material={materials['phong1.001']}
        geometry={nodes.base.geometry}
        position={[0, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.2, 0.2, 0.2]}>
        <a.mesh rotation={roty.interpolate(r => [0, 0, r])} material={materials['phong1.001']} geometry={nodes.sphere.geometry} position={[0.01, 4.91, -27.29]}  />
        <a.mesh rotation={roty.interpolate(r => [0, r, 0])} material={materials['phong1.001']} geometry={nodes.wheel.geometry} position={[0.01, 7.5, -27.29]} />
      </a.mesh>
    </group>
  )
}
